'''Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [−2,1,−3,4,−1,2,1,−5,4],
the contiguous subarray [4,−1,2,1] has the largest sum = 6.'''
#1,2,3,4,...n
#sum(1) sum(1,2) sum(1,2,3)... sum(1,...,n)
#return max(sum)
#then
#sum(2) sum(2,3) sum(2,3,4)... sum(2...n)
#...
def maxsub(a):
    tempdict = {}
    for i in xrange(len(a)):
        tempdict[i] = sum(a[0:i+1])
    templist = []
    for j in tempdict:
        templist.append(tempdict[j])
    return a[0:templist.index(max(templist))+ 1], max(templist)
def remaxsub(aList):
    tempList = []
    for i in xrange(len(aList)):
        tempList.append(maxsub(aList[i:]))
    #return tempList
    findMaxsub = []
    for j in tempList:
        findMaxsub.append(j[1])
    return tempList[findMaxsub.index(max(findMaxsub))]
#a = [-2,1,-3,4,-1,2,1,-5,4]    
#a = [1]    
#print maxsub(a)        
#print remaxsub(a)
